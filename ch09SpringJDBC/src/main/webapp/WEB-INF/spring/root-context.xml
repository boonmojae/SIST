<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 데이터 설정파일 -->
	<!-- 레거시 자동지원안해서 context안보여서 beans 새로 복붙 -->
	<!-- 빈 자동 스캔 - servlet-context.xml에서 Controller를 자동 스캔 설정해서 아래 설정에서는 Controller 자동 스캔 제외 -->
	<context:component-scan base-package="kr.spring.board">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/><!-- controller는 servlet-context.xml에서 했으니까 자동스캔에서 얘를 뺌(이중지정 방지) -->
	</context:component-scan>
	
	<!-- jdbc.properties 사용할 수 있게 컨테이너에 등록-->
	<context:property-placeholder location="classpath:config/jdbc.properties"/><!-- property로 key,value쌍으로 명시 -->
	<!-- 커넥션풀을 이용한 DataSource 설정 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/><!-- key값을 줘서 그 값을 읽어오면됨 -->
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 최대 커넥션 개수 -->
		<property name="maxActive" value="50"/>
		<!-- 접속이 없을 경우 최대 유지 커넥션 개수 -->
		<property name="maxIdle" value="30"/>
		<!-- 접속이 없을 경우 최소 유지 커넥션 개수 -->
		<property name="minIdle" value="20"/>
		<!-- 최대 대기시간(초) : 초과시 연결 실패 오류 발생 -->
		<property name="maxWait" value="5"/>
	</bean>
	
	<!-- 트랜잭션 처리 하려면 객체 생성해야됨 -->
	<!-- JdbcTemplate 객체 생성 -->
	<bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- 위에 설정했던 데이터 소스 넘겨받음 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- JDBC 기반 트랜잭션 관리자 설정(트랜잭션 처리하기 위해)  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		  p:dataSource-ref="dataSource"/>
		  
	<!-- 어노테이션 방식으로 처리할 때(안넣으면 동작 안됨)-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
